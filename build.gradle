plugins {
    id "com.moowork.node" version "0.11"
    id "com.moowork.grunt" version "0.12"
    id "com.bmuschko.tomcat" version "2.2.4"
}
node {
    version = "4.3.2"
    npmVersion = "3.8.0"
    workDir = file("${project.buildDir}/nodejs")
    nodeModulesDir = file("${project.projectDir}")
    download = true
}
apply plugin: 'java'
apply plugin: 'war'

sourceCompatibility = '1.8'
[compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

// NetBeans will automatically add "run" and "debug" tasks relying on the
// "mainClass" property. You may however define the property prior executing
// tasks by passing a "-PmainClass=<QUALIFIED_CLASS_NAME>" argument.
//
// Note however, that you may define your own "run" and "debug" task if you
// prefer. In this case NetBeans will not add these tasks but you may rely on
// your own implementation.
if (!hasProperty('mainClass')) {
    ext.mainClass = ''
}

repositories {
    mavenCentral()
    // You may define additional repositories, or even remove "mavenCentral()".
    // Read more about repositories here:
    //   http://www.gradle.org/docs/current/userguide/dependency_management.html#sec:repositories
}

tomcat {
    httpsPort = 9090
    enableSSL = true
}

dependencies {
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.22.1'
    compile 'org.glassfish.jersey.media:jersey-media-sse:2.22.1'

    testCompile group: 'junit', name: 'junit', version: '4.10'
    def tomcatVersion = '7.0.59'
    tomcat "org.apache.tomcat.embed:tomcat-embed-core:${tomcatVersion}"
    tomcat "org.apache.tomcat.embed:tomcat-embed-logging-juli:${tomcatVersion}"
    tomcat "org.apache.tomcat.embed:tomcat-embed-jasper:${tomcatVersion}"
}

task bowerInstall(type: Exec) {
    def currentPath = System.env['PATH']
    def nodePath = "C:/Program Files/Git/bin;C:/Program Files/Git/mingw64/libexec/git-core;${project.buildDir}/nodejs/node-v4.3.2-windows-x64/bin;${currentPath}"
    environment("PATH", nodePath)
    executable = file('node_modules/.bin/bower.cmd')
    args = ["--config.storage.cache=${gradle.getGradleUserHomeDir()}/caches/bower/cache",
            "--config.storage.packages=${gradle.getGradleUserHomeDir()}/caches/bower/packages",
            "--config.storage.registry=${gradle.getGradleUserHomeDir()}/caches/bower/registry",
            "--config.directory=${projectDir}/src/main/webapp/js",
            'install']
    inputs.files file('bower.json')
    outputs.files file('${projectDir}/src/main/webapp/js')
    dependsOn npmInstall
}